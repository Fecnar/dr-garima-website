---
const title = "Wishes Manager - Admin";
---

<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>{title}</title>
  <style>
    body {
      font-family: 'Segoe UI', sans-serif;
      margin: 0;
      background: linear-gradient(135deg, #1db954 0%, #1ed760 100%);
      min-height: 100vh;
      color: #333;
    }
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 2rem;
    }
    .admin-nav {
      background: rgba(255,255,255,0.9);
      padding: 1rem;
      border-radius: 8px;
      margin-bottom: 2rem;
    }
    .admin-nav a {
      color: #1db954;
      text-decoration: none;
      margin-right: 1.5rem;
      padding: 0.5rem 1rem;
      border-radius: 4px;
    }
    .logout-btn {
      float: right;
      background: #ff6b6b;
      color: white;
      border: none;
      padding: 0.5rem 1rem;
      border-radius: 4px;
      cursor: pointer;
    }
    .admin-hero {
      text-align: center;
      background: rgba(255,255,255,0.9);
      padding: 3rem 2rem;
      border-radius: 15px;
      margin-bottom: 3rem;
    }
    .wishes-section {
      background: rgba(255,255,255,0.9);
      padding: 2rem;
      border-radius: 15px;
      margin-bottom: 2rem;
    }
    .wish-item {
      background: #f8f9fa;
      padding: 1.5rem;
      border-radius: 8px;
      margin: 1rem 0;
      border-left: 4px solid #1db954;
    }
    .wish-header {
      display: flex;
      justify-content: space-between;
      align-items: flex-start;
      margin-bottom: 1rem;
    }
    .wish-info {
      flex: 1;
    }
    .wish-actions {
      display: flex;
      gap: 0.5rem;
      margin-top: 1rem;
    }
    .btn {
      border: none;
      padding: 0.5rem 1rem;
      border-radius: 4px;
      cursor: pointer;
      font-size: 0.9rem;
      transition: all 0.3s;
    }
    .btn:hover:not(:disabled) {
      transform: translateY(-1px);
    }
    .btn:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }
    .btn-approve {
      background: #1db954;
      color: white;
    }
    .btn-reject {
      background: #ff6b6b;
      color: white;
    }
    .btn-approved {
      background: #28a745;
      color: white;
    }
    .btn-rejected {
      background: #dc3545;
      color: white;
    }
    .status-badge {
      padding: 0.3rem 0.8rem;
      border-radius: 20px;
      font-size: 0.8rem;
      font-weight: bold;
    }
    .status-pending {
      background: #ffc107;
      color: #000;
    }
    .status-approved {
      background: #28a745;
      color: white;
    }
    .status-rejected {
      background: #dc3545;
      color: white;
    }
    .loading {
      text-align: center;
      padding: 3rem;
      color: #1db954;
    }
    .access-denied {
      text-align: center;
      padding: 4rem 2rem;
      background: rgba(255,255,255,0.9);
      border-radius: 15px;
    }
    .error {
      background: #f8d7da;
      color: #721c24;
      padding: 1rem;
      border-radius: 4px;
      margin: 1rem 0;
    }
    .success {
      background: #d4edda;
      color: #155724;
      padding: 1rem;
      border-radius: 4px;
      margin: 1rem 0;
    }
  </style>
</head>
<body>
  <div id="wishes-admin-content" style="display: none;">
    <div class="container">
      <div class="admin-nav">
        <a href="/home">🎂 Personal Home</a>
        <a href="/admin/master">👑 Master Admin</a>
        <a href="/admin/wishes">💝 Wishes Manager</a>
        <span style="color: #1db954; font-weight: bold;">💝 Wishes Management</span>
        <button onclick="logout()" class="logout-btn">Logout</button>
        <div style="clear: both;"></div>
      </div>

      <div class="admin-hero">
        <h1>💝 Birthday Wishes Management</h1>
        <p>Review and moderate birthday wish submissions</p>
        <div id="wishes-stats" style="margin-top: 1rem; color: #1db954;">
          Loading wishes...
        </div>
      </div>

      <div class="wishes-section">
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 2rem;">
          <h2>📝 All Wishes</h2>
          <button onclick="refreshWishes()" class="btn" style="background: #17a2b8; color: white;">
            🔄 Refresh
          </button>
        </div>
        
        <div id="message-area"></div>
        
        <div id="wishes-list" class="loading">
          <p>🔄 Loading birthday wishes from Google Sheets...</p>
        </div>
      </div>
    </div>
  </div>

  <div id="access-denied" class="access-denied">
    <h2>🚫 Admin Access Required</h2>
    <p>Only authorized administrators can manage birthday wishes.</p>
    <button onclick="window.location.href='/'" style="background: #1db954; color: white; border: none; padding: 1rem 2rem; border-radius: 8px; cursor: pointer;">
      Go to Home
    </button>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const currentUser = localStorage.getItem('userEmail');
      
      if (currentUser === 'adityagaur0510@gmail.com') {
        document.getElementById('wishes-admin-content').style.display = 'block';
        document.getElementById('access-denied').style.display = 'none';
        loadWishes();
      } else {
        document.getElementById('access-denied').style.display = 'block';
      }
    });

    async function loadWishes() {
      showMessage('Loading wishes from Google Sheets...', 'info');
      
      try {
        const response = await fetch('/api/wishes/get-all');
        
        if (!response.ok) {
          throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }
        
        const wishes = await response.json();
        console.log('Loaded wishes:', wishes);
        
        displayWishes(wishes);
        updateStats(wishes);
        clearMessage();
        
      } catch (error) {
        console.error('Error loading wishes:', error);
        showMessage(`Error loading wishes: ${error.message}`, 'error');
        document.getElementById('wishes-list').innerHTML = `
          <div style="text-align: center; padding: 3rem; color: #ff6b6b;">
            <h3>💔 Failed to load wishes</h3>
            <p>Error: ${error.message}</p>
            <button onclick="refreshWishes()" class="btn" style="background: #17a2b8; color: white;">
              🔄 Try Again
            </button>
          </div>
        `;
      }
    }

    function displayWishes(wishes) {
      const container = document.getElementById('wishes-list');
      
      if (wishes.length === 0) {
        container.innerHTML = `
          <div style="text-align: center; padding: 3rem; color: #666;">
            <h3>📝 No wishes submitted yet</h3>
            <p>Wishes will appear here when people submit them through your Google Form</p>
          </div>
        `;
        return;
      }

      // Sort wishes: Pending first, then by timestamp
      wishes.sort((a, b) => {
        if (a.status === 'Pending' && b.status !== 'Pending') return -1;
        if (b.status === 'Pending' && a.status !== 'Pending') return 1;
        return new Date(b.timestamp) - new Date(a.timestamp);
      });

      container.innerHTML = wishes.map(wish => `
        <div class="wish-item" id="wish-${wish.rowIndex}">
          <div class="wish-header">
            <div class="wish-info">
              <strong style="font-size: 1.1rem; color: #1db954;">${escapeHtml(wish.name)}</strong>
              <span class="status-badge status-${(wish.status || 'pending').toLowerCase()}" style="margin-left: 1rem;">
                ${wish.status || 'Pending'}
              </span>
            </div>
            <div style="font-size: 0.9rem; color: #666;">
              ${formatDate(wish.timestamp)}
            </div>
          </div>
          
          <p style="margin: 1rem 0; line-height: 1.6; color: #555; font-style: italic;">
            "${escapeHtml(wish.message || 'No message')}"
          </p>
          
          <div class="wish-actions">
            ${getActionButtons(wish)}
          </div>
          
          ${wish.adminNotes ? `<div style="margin-top: 0.5rem; font-size: 0.8rem; color: #666;">Admin: ${escapeHtml(wish.adminNotes)}</div>` : ''}
        </div>
      `).join('');
    }
    
    function getActionButtons(wish) {
      if (wish.status === 'Approved') {
        return `<button class="btn btn-approved" disabled>✅ Approved</button>`;
      } else if (wish.status === 'Rejected') {
        return `<button class="btn btn-rejected" disabled>❌ Rejected</button>`;
      } else {
        return `
          <button class="btn btn-approve" onclick="updateWishStatus(${wish.rowIndex}, 'Approved')" id="approve-${wish.rowIndex}">
            ✅ Approve
          </button>
          <button class="btn btn-reject" onclick="updateWishStatus(${wish.rowIndex}, 'Rejected')" id="reject-${wish.rowIndex}">
            ❌ Reject
          </button>
        `;
      }
    }

    async function updateWishStatus(rowIndex, status) {
      const approveBtn = document.getElementById(`approve-${rowIndex}`);
      const rejectBtn = document.getElementById(`reject-${rowIndex}`);
      
      // Disable buttons during request
      if (approveBtn) approveBtn.disabled = true;
      if (rejectBtn) rejectBtn.disabled = true;
      
      showMessage(`${status === 'Approved' ? 'Approving' : 'Rejecting'} wish...`, 'info');
      
      try {
        const response = await fetch('/api/wishes/update-status', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ rowIndex, status })
        });

        const result = await response.json();
        
        if (result.success) {
          showMessage(`✅ Wish ${status.toLowerCase()} successfully!`, 'success');
          // Refresh the wishes list to show updated status
          setTimeout(() => {
            loadWishes();
          }, 1000);
        } else {
          throw new Error(result.error || 'Failed to update wish status');
        }
      } catch (error) {
        console.error('Error updating wish:', error);
        showMessage(`❌ Error: ${error.message}`, 'error');
        
        // Re-enable buttons on error
        if (approveBtn) approveBtn.disabled = false;
        if (rejectBtn) rejectBtn.disabled = false;
      }
    }

    function updateStats(wishes) {
      const pending = wishes.filter(w => !w.status || w.status === 'Pending').length;
      const approved = wishes.filter(w => w.status === 'Approved').length;
      const rejected = wishes.filter(w => w.status === 'Rejected').length;
      
      document.getElementById('wishes-stats').innerHTML = `
        Total: ${wishes.length} | 
        ⏳ Pending: ${pending} | 
        ✅ Approved: ${approved} | 
        ❌ Rejected: ${rejected}
      `;
    }

    function formatDate(timestamp) {
      if (!timestamp) return 'Unknown date';
      try {
        return new Date(timestamp).toLocaleDateString('en-US', { 
          month: 'short', 
          day: 'numeric',
          year: 'numeric',
          hour: '2-digit', 
          minute: '2-digit'
        });
      } catch (e) {
        return 'Invalid date';
      }
    }
    
    function escapeHtml(text) {
      const div = document.createElement('div');
      div.textContent = text;
      return div.innerHTML;
    }

    function showMessage(message, type) {
      const messageArea = document.getElementById('message-area');
      messageArea.innerHTML = `<div class="${type}">${message}</div>`;
    }
    
    function clearMessage() {
      document.getElementById('message-area').innerHTML = '';
    }

    window.refreshWishes = loadWishes;

    window.logout = function() {
      localStorage.removeItem('userEmail');
      window.location.href = '/';
    };
  </script>
</body>
</html>
